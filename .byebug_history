exit
Url.paginate
Url.paginate(:page => 1)
exit
Url.paginate(:page => 1)
params[:page]
params
Url
c
Url.paginate
exit
Url.all
URl
Url.paginate
exit
Url.paginate
Url
exit
@url.save
@url
exit
@url.to_json
@url
exit
@url
exit
@url
exit
@url.to_json
@url
exit
n
@url
exit
@url
exit
@url.short_url
@url
exit
@url.short_url
@url.long_url
@url
exit
@url.short_url
short_url
exit
sql
exit
"('#{x}', '#{short_url}', #{Time.now}, #{Time.now})"
exit
"('#{x}', '#{short_url}', #{Time.now}, #{Time.now})"
x
exit
exi
x
exit
x
"('#{x}', '#{short_url}', #{Time.now}, #{Time.now})"
short_url
sql
exit
x
sql
values
sql
exit
sql
n
sql
n
sql
exit
sql[-6]
sql[-5]
sql[-4]
sql[-3]
sql[-2]
sql[-1]
n
sql
n
sql[-2]
sql[-1]
exit
sql[-4]
sql[-3]
sql[-2]
sql[-1]
exit
sql[-4]
sql[-3]
sql[-2]
sql[-1]
exit
sql[-3]
sql[-2]
sql[-1]
exit
sql[-3]
sql[-2]
sql[-1]
exit
sql.chomp(',')[-4]
sql.chomp(',')[-3]
sql.chomp(',')[-2]
sql.chomp(',')[-1]
sql[-1]
sql
exit
sql.chomp(',')
n
sql.chomp(',')
sql
n
sql
exit
sql
n
sql
exit
sql
n
sql
exit
sql
exit
sql
exit
sql
exit
sql
values
exit
values.first.inspect
values.first
value.first
values
exit
Time.now
exit
value
exit
n
exit
n
values[0]
exit
n
exit
n
exit
@url.errors.full_messages
@url.errors
@url
exit
@url.errors.full_messages.each {|x| p x}
@url.errors.full_messages.each do |x|
@url.errors.full_messages
@url
n
exit
@url.errors.full_messages.each {|x| p x}
@url.errors.full_messages
@url.errors
exit
@url.errors
@url.error.full_messages
@url.error
@url
url
exit
@error
exit
@error
exit
@error
exit
url.invalid?
exit
counter
url.click_counter
exit
url
url.click_counter
exit
url.click_counter
n
counter
n
counter
url.click_counter
url
exit
Url.find(16)
Url.all
params[:short_url]
exit
Url.find_by short_url: params[:short_url]
p params[:short_url]
params[:short_url]
:short_url
Url.all
url
